#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ X\ O\ game\ logic\ +\ AI\r\n\r\n
comment1.params=boardGUI
comment1.target=Game(Board)
comment1.text=\r\n\ Le\ constructeur\ pour\ initialiser\ les\ differents\ objets\ de\ la\ classe\r\n
comment10.params=board
comment10.target=GameStatus\ getGameStatus(char[][])
comment10.text=\r\n\ Determiner\ le\ status\ de\ jeu\ si\ c\ est\ fini\ ou\ non\r\n\ si\ toutes\ les\ cases\ sont\ remplies\ ,ou\ bien\ l'un\ des\ 2\ a\ gagn\u00E9\r\n
comment11.params=board
comment11.target=boolean\ gameDrawn(char[][])
comment11.text=\r\nDessiner\ le\ jeu\r\n
comment12.params=board\ MARKER
comment12.target=boolean\ gameWon(char[][],\ char)
comment12.text=\r\n\ Det\u00E9rminer\ qui\ a\ gagn\u00E9\ le\ jeu\ \:le\ joueur\ avec\ x\ ou\ bien\ o\r\n
comment13.params=
comment13.target=void\ addCross()
comment13.text=\r\nAjouter\ X\ utiliser\ par\ l'ordinateur\r\n
comment14.params=
comment14.target=void\ clearBoard()
comment14.text=\r\nclearBoard\:\ Pour\ vider\ tous\ les\ cases\r\n
comment15.params=board
comment15.target=void\ printBoard(char[][])
comment15.text=\r\n\ Prints\ board\ to\ console\ -\ useful\ for\ tesing/debugging\r\n
comment16.params=
comment16.target=Point\ getNextMove()
comment16.text=\r\n\ Retourner\ la\ prochaine\ action\ jou\u00E9e\ par\ le\ computer\r\n
comment17.params=board
comment17.target=Game.Node\ minimax(char[][])
comment17.text=\r\nD\u00E9terminer\ la\ meilleur\ action\ pour\ \ X\ \:\ \u00E7-\u00E0-d\ le\ joueur\ computer\ par\ l\ algo\ MinMax\r\n
comment18.params=current\ switchPlayer\ depth
comment18.target=int\ minimaxValue(Game.Node,\ boolean,\ int)
comment18.text=\r\n\ Depth-first\ minimax\ score\ calculation\r\n\ @param\ current\ Node\ to\ be\ determined\r\n\ @param\ switchPlayer\ Flag\ used\ in\ recursive\ calls\ (in\ gametree\ generation)\r\n\ @param\ depth\ Current\ tree\ depth\ (useful\ for\ testing)\r\n
comment19.params=current\ MARKER
comment19.target=java.util.List\ nextCandidateMoves(char[][],\ char)
comment19.text=\r\n\ D\u00E9terminer\ la\ listes\ des\ actions\ possibles\r\n\ retourne\ null\ si\ le\ jeu\ est\ t\u00E9rmin\u00E9\r\n
comment2.params=
comment2.target=void\ newGame()
comment2.text=\r\n\ Commencer\ le\ jeu\:RUN\r\n
comment20.params=board
comment20.target=char[][]\ getBoardCopy(char[][])
comment20.text=\r\n\ //retourner\ une\ copie\ de\ la\ configuration\ actuelle\ de\ la\ grille\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ \r\n\ Changer\ le\ status\ de\ jeu\ a\ chaque\ tour\:homme\ et\ computer\r\n
comment4.params=x\ y
comment4.target=boolean\ addNought(int,\ int)
comment4.text=\r\n\ \r\n\ Ajouter\ O\ dans\ la\ case\ ad\u00E9quate\ qui\ comme\ parametre\ X\ et\ Y\r\n\ Si\ c\ est\ bien\ ajouter\ la\ fonction\ retourne\ true\ sinon\ false\r\n
comment5.params=
comment5.target=boolean\ finished()
comment5.text=\r\n\ Determiner\ si\ le\ jeu\ est\ termin\u00E9?\r\n
comment6.params=x\ y
comment6.target=boolean\ addCross(int,\ int)
comment6.text=\r\n\ Ajouter\ X\ dans\ la\ case\ ad\u00E9quate-Le\ joueur\ est\ le\ computer\r\n
comment7.params=
comment7.target=void\ gameOver()
comment7.text=\r\nMethode\ Jeu\ termin\u00E9\r\n
comment8.params=
comment8.target=void\ updateStatus()
comment8.text=\r\n\ Changer\ le\ status\ apres\ chaque\ it\u00E9ration\r\n\ V\u00E9rifier\ si\ le\ jeu\ est\ t\u00E9rminer\ ou\ biel\ l\ 'un\ des\ 2\ a\ gagn\u00E9\r\n
comment9.params=board\ x\ y
comment9.target=boolean\ isValidMove(char[][],\ int,\ int)
comment9.text=\r\n\ Det\u00E9rminer\ si\ la\ case\ est\ valide\r\n\ \r\n
numComments=21
